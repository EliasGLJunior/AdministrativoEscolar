// <auto-generated />
using System;
using AdministrativoEscolar.CORE.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdministrativoEscolar.CORE.Migrations
{
    [DbContext(typeof(AdmEscolarDbContext))]
    [Migration("20230324202629_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.Aluno", b =>
                {
                    b.Property<int>("IdAluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAluno"));

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtDelecao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEscola")
                        .HasColumnType("int");

                    b.Property<int>("IdMatricula")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NmAluno")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NuCPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("NuRG")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NuTelefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("SbnmAluno")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TxNacionalidade")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("IdAluno");

                    b.HasIndex("IdEscola");

                    b.HasIndex("IdMatricula")
                        .IsUnique();

                    b.HasIndex("IdUsuario")
                        .IsUnique();

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.AlunoStatusLetivoHistorico", b =>
                {
                    b.Property<int>("IdAluno")
                        .HasColumnType("int");

                    b.Property<int>("IdStatusLetivo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtDelecao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlStatusAtual")
                        .HasColumnType("bit");

                    b.HasKey("IdAluno", "IdStatusLetivo");

                    b.HasIndex("IdStatusLetivo");

                    b.ToTable("AlunoStatusLetivoHistoricos");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.EnderecoAluno", b =>
                {
                    b.Property<int>("IdEnderecoAluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnderecoAluno"));

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtDelecao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlEnderecoAtual")
                        .HasColumnType("bit");

                    b.Property<int>("IdAluno")
                        .HasColumnType("int");

                    b.Property<string>("NuCepEndereco")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("NuEndereco")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("TxBairro")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TxCidade")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TxEndereco")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TxEstado")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdEnderecoAluno");

                    b.HasIndex("IdAluno");

                    b.ToTable("EnderecoAlunos");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.Escola", b =>
                {
                    b.Property<int>("IdEscola")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEscola"));

                    b.Property<string>("CdEscola")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtDelecao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NmEscola")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NuCepEndereco")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("NuEndereco")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<string>("NuTelefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("TxBairro")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TxCidade")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TxEndereco")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TxEstado")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdEscola");

                    b.ToTable("Escolas");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.Matricula", b =>
                {
                    b.Property<int>("IdMatricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMatricula"));

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtDelecao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NuMatricula")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("IdMatricula");

                    b.ToTable("Matriculas");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.ResponsavelAluno", b =>
                {
                    b.Property<int>("IdResponsavelAluno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdResponsavelAluno"));

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtDelecao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlResponsavelPrincipal")
                        .HasColumnType("bit");

                    b.Property<int>("IdAluno")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NmResponsavel")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NuCPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("NuRG")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NuTelefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("IdResponsavelAluno");

                    b.HasIndex("IdAluno");

                    b.HasIndex("IdUsuario")
                        .IsUnique()
                        .HasFilter("[IdUsuario] IS NOT NULL");

                    b.ToTable("ResponsavelAlunos");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.StatusLetivo", b =>
                {
                    b.Property<int>("IdStatusLetivo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatusLetivo"));

                    b.Property<string>("CdStatusLetivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxStatusLetivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxTipoEnsino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStatusLetivo");

                    b.ToTable("StatusLetivos");

                    b.HasData(
                        new
                        {
                            IdStatusLetivo = 1,
                            CdStatusLetivo = "primeiro_creche",
                            TxStatusLetivo = "1º Creche",
                            TxTipoEnsino = "creche"
                        },
                        new
                        {
                            IdStatusLetivo = 2,
                            CdStatusLetivo = "segundo_creche",
                            TxStatusLetivo = "2º Creche",
                            TxTipoEnsino = "creche"
                        },
                        new
                        {
                            IdStatusLetivo = 3,
                            CdStatusLetivo = "terceiro_creche",
                            TxStatusLetivo = "3º Creche",
                            TxTipoEnsino = "creche"
                        },
                        new
                        {
                            IdStatusLetivo = 4,
                            CdStatusLetivo = "primeiro_ensino_infantil",
                            TxStatusLetivo = "1º Ensino Infantil",
                            TxTipoEnsino = "ensino_infantil"
                        },
                        new
                        {
                            IdStatusLetivo = 5,
                            CdStatusLetivo = "segundo_ensino_infantil",
                            TxStatusLetivo = "2º Ensino Infantil",
                            TxTipoEnsino = "ensino_infantil"
                        },
                        new
                        {
                            IdStatusLetivo = 6,
                            CdStatusLetivo = "primeiro_fundamental",
                            TxStatusLetivo = "1º Fundamental",
                            TxTipoEnsino = "ensino_fundamental_um"
                        },
                        new
                        {
                            IdStatusLetivo = 7,
                            CdStatusLetivo = "segundo_fundamental",
                            TxStatusLetivo = "2º Fundamental",
                            TxTipoEnsino = "ensino_fundamental_um"
                        },
                        new
                        {
                            IdStatusLetivo = 8,
                            CdStatusLetivo = "terceiro_fundamental",
                            TxStatusLetivo = "3º Fundamental",
                            TxTipoEnsino = "ensino_fundamental_um"
                        },
                        new
                        {
                            IdStatusLetivo = 9,
                            CdStatusLetivo = "quarto_fundamental",
                            TxStatusLetivo = "4º Fundamental",
                            TxTipoEnsino = "ensino_fundamental_um"
                        },
                        new
                        {
                            IdStatusLetivo = 10,
                            CdStatusLetivo = "quinto_fundamental",
                            TxStatusLetivo = "5º Fundamental",
                            TxTipoEnsino = "ensino_fundamental_um"
                        },
                        new
                        {
                            IdStatusLetivo = 11,
                            CdStatusLetivo = "sexto_fundamental",
                            TxStatusLetivo = "6º Fundamental",
                            TxTipoEnsino = "ensino_fundamental_dois"
                        },
                        new
                        {
                            IdStatusLetivo = 12,
                            CdStatusLetivo = "setimo_fundamental",
                            TxStatusLetivo = "7º Fundamental",
                            TxTipoEnsino = "ensino_fundamental_dois"
                        },
                        new
                        {
                            IdStatusLetivo = 13,
                            CdStatusLetivo = "oitavo_fundamental",
                            TxStatusLetivo = "8º Fundamental",
                            TxTipoEnsino = "ensino_fundamental_dois"
                        },
                        new
                        {
                            IdStatusLetivo = 14,
                            CdStatusLetivo = "nono_fundamental",
                            TxStatusLetivo = "9º Fundamental",
                            TxTipoEnsino = "ensino_fundamental_dois"
                        },
                        new
                        {
                            IdStatusLetivo = 15,
                            CdStatusLetivo = "primeiro_ensino_medio",
                            TxStatusLetivo = "1º Ensino Médio",
                            TxTipoEnsino = "ensino_medio"
                        },
                        new
                        {
                            IdStatusLetivo = 16,
                            CdStatusLetivo = "segundo_ensino_medio",
                            TxStatusLetivo = "2º Ensino Médio",
                            TxTipoEnsino = "ensino_medio"
                        },
                        new
                        {
                            IdStatusLetivo = 17,
                            CdStatusLetivo = "terceiro_ensino_medio",
                            TxStatusLetivo = "3º Ensino Médio",
                            TxTipoEnsino = "ensino_medio"
                        },
                        new
                        {
                            IdStatusLetivo = 18,
                            CdStatusLetivo = "quarto_ensino_medio",
                            TxStatusLetivo = "4º Ensino Médio",
                            TxTipoEnsino = "ensino_medio"
                        },
                        new
                        {
                            IdStatusLetivo = 19,
                            CdStatusLetivo = "primeiro_ensino_medio_tecnico",
                            TxStatusLetivo = "1º Ensino Médio Técnico",
                            TxTipoEnsino = "ensino_medio_tecnico"
                        },
                        new
                        {
                            IdStatusLetivo = 20,
                            CdStatusLetivo = "segundo_ensino_medio_tecnico",
                            TxStatusLetivo = "2º Ensino Médio Técnico",
                            TxTipoEnsino = "ensino_medio_tecnico"
                        },
                        new
                        {
                            IdStatusLetivo = 21,
                            CdStatusLetivo = "terceiro_ensino_medio_tecnico",
                            TxStatusLetivo = "3º Ensino Médio Técnico",
                            TxTipoEnsino = "ensino_medio_tecnico"
                        },
                        new
                        {
                            IdStatusLetivo = 22,
                            CdStatusLetivo = "quarto_ensino_medio_tecnico",
                            TxStatusLetivo = "4º Ensino Médio Técnico",
                            TxTipoEnsino = "ensino_medio_tecnico"
                        },
                        new
                        {
                            IdStatusLetivo = 23,
                            CdStatusLetivo = "primeiro_semestre_ensino_tecnico",
                            TxStatusLetivo = "1º Semestre Ensino Técnico",
                            TxTipoEnsino = "ensino_tecnico"
                        },
                        new
                        {
                            IdStatusLetivo = 24,
                            CdStatusLetivo = "segundo_semestre_ensino_tecnico",
                            TxStatusLetivo = "2º Semestre Ensino Técnico",
                            TxTipoEnsino = "ensino_tecnico"
                        },
                        new
                        {
                            IdStatusLetivo = 25,
                            CdStatusLetivo = "terceiro_semestre_ensino_tecnico",
                            TxStatusLetivo = "3º Semestre Ensino Técnico",
                            TxTipoEnsino = "ensino_tecnico"
                        },
                        new
                        {
                            IdStatusLetivo = 26,
                            CdStatusLetivo = "quarto_semestre_ensino_tecnico",
                            TxStatusLetivo = "4º Semestre Ensino Técnico",
                            TxTipoEnsino = "ensino_tecnico"
                        },
                        new
                        {
                            IdStatusLetivo = 27,
                            CdStatusLetivo = "primeiro_semestre_superior",
                            TxStatusLetivo = "1º Semestre Superior",
                            TxTipoEnsino = "ensino_superior"
                        },
                        new
                        {
                            IdStatusLetivo = 28,
                            CdStatusLetivo = "segundo_semestre_superior",
                            TxStatusLetivo = "2º Semestre Superior",
                            TxTipoEnsino = "ensino_superior"
                        },
                        new
                        {
                            IdStatusLetivo = 29,
                            CdStatusLetivo = "terceiro_semestre_superior",
                            TxStatusLetivo = "3º Semestre Superior",
                            TxTipoEnsino = "ensino_superior"
                        },
                        new
                        {
                            IdStatusLetivo = 30,
                            CdStatusLetivo = "quarto_semestre_superior",
                            TxStatusLetivo = "4º Semestre Superior",
                            TxTipoEnsino = "ensino_superior"
                        },
                        new
                        {
                            IdStatusLetivo = 31,
                            CdStatusLetivo = "quinto_semestre_superior",
                            TxStatusLetivo = "5º Semestre Superior",
                            TxTipoEnsino = "ensino_superior"
                        },
                        new
                        {
                            IdStatusLetivo = 32,
                            CdStatusLetivo = "sexto_semestre_superior",
                            TxStatusLetivo = "6º Semestre Superior",
                            TxTipoEnsino = "ensino_superior"
                        },
                        new
                        {
                            IdStatusLetivo = 33,
                            CdStatusLetivo = "setimo_semestre_superior",
                            TxStatusLetivo = "7º Semestre Superior",
                            TxTipoEnsino = "ensino_superior"
                        },
                        new
                        {
                            IdStatusLetivo = 34,
                            CdStatusLetivo = "oitavo_semestre_superior",
                            TxStatusLetivo = "8º Semestre Superior",
                            TxTipoEnsino = "ensino_superior"
                        },
                        new
                        {
                            IdStatusLetivo = 35,
                            CdStatusLetivo = "nono_semestre_superior",
                            TxStatusLetivo = "9º Semestre Superior",
                            TxTipoEnsino = "ensino_superior"
                        },
                        new
                        {
                            IdStatusLetivo = 36,
                            CdStatusLetivo = "decimo_semestre_superior",
                            TxStatusLetivo = "10º Semestre Superior",
                            TxTipoEnsino = "ensino_superior"
                        },
                        new
                        {
                            IdStatusLetivo = 37,
                            CdStatusLetivo = "decimo_primeiro_semestre_superior",
                            TxStatusLetivo = "11º Semestre Superior",
                            TxTipoEnsino = "ensino_superior"
                        },
                        new
                        {
                            IdStatusLetivo = 38,
                            CdStatusLetivo = "decimo_segundo_semestre_superior",
                            TxStatusLetivo = "12º Semestre Superior",
                            TxTipoEnsino = "ensino_superior"
                        });
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.StatusMatricula", b =>
                {
                    b.Property<int>("IdStatusMatricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatusMatricula"));

                    b.Property<string>("CdStatusMatricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxStatusMatricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStatusMatricula");

                    b.ToTable("StatusMatriculas");

                    b.HasData(
                        new
                        {
                            IdStatusMatricula = 1,
                            CdStatusMatricula = "matriculado",
                            TxStatusMatricula = "Matriculado"
                        },
                        new
                        {
                            IdStatusMatricula = 2,
                            CdStatusMatricula = "pendente",
                            TxStatusMatricula = "Pendente"
                        },
                        new
                        {
                            IdStatusMatricula = 3,
                            CdStatusMatricula = "trancado",
                            TxStatusMatricula = "Trancado"
                        },
                        new
                        {
                            IdStatusMatricula = 4,
                            CdStatusMatricula = "cancelado",
                            TxStatusMatricula = "Cancelado"
                        },
                        new
                        {
                            IdStatusMatricula = 5,
                            CdStatusMatricula = "desistencia",
                            TxStatusMatricula = "Desistência"
                        },
                        new
                        {
                            IdStatusMatricula = 6,
                            CdStatusMatricula = "transferido",
                            TxStatusMatricula = "Transferido"
                        },
                        new
                        {
                            IdStatusMatricula = 7,
                            CdStatusMatricula = "rejeitado",
                            TxStatusMatricula = "Rejeitado"
                        },
                        new
                        {
                            IdStatusMatricula = 8,
                            CdStatusMatricula = "suspenso",
                            TxStatusMatricula = "Suspenso"
                        },
                        new
                        {
                            IdStatusMatricula = 9,
                            CdStatusMatricula = "expulso",
                            TxStatusMatricula = "Expulso"
                        },
                        new
                        {
                            IdStatusMatricula = 10,
                            CdStatusMatricula = "graduado",
                            TxStatusMatricula = "Graduado"
                        });
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.StatusMatriculaHistorico", b =>
                {
                    b.Property<int>("IdMatricula")
                        .HasColumnType("int");

                    b.Property<int>("IdStatusMatricula")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtDelecao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FlStatusAtual")
                        .HasColumnType("bit");

                    b.HasKey("IdMatricula", "IdStatusMatricula");

                    b.HasIndex("IdStatusMatricula");

                    b.ToTable("StatusMatriculaHistoricos");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.TipoUsuario", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoUsuario"));

                    b.Property<string>("CdTipoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TxTipoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoUsuario");

                    b.ToTable("TipoUsuarios");

                    b.HasData(
                        new
                        {
                            IdTipoUsuario = 1,
                            CdTipoUsuario = "administrador_geral",
                            TxTipoUsuario = "Administrador Geral"
                        },
                        new
                        {
                            IdTipoUsuario = 2,
                            CdTipoUsuario = "administrador_escolar",
                            TxTipoUsuario = "Administrador Escolar"
                        },
                        new
                        {
                            IdTipoUsuario = 3,
                            CdTipoUsuario = "professor",
                            TxTipoUsuario = "Professor"
                        },
                        new
                        {
                            IdTipoUsuario = 4,
                            CdTipoUsuario = "aluno",
                            TxTipoUsuario = "Aluno"
                        },
                        new
                        {
                            IdTipoUsuario = 5,
                            CdTipoUsuario = "responsavel_aluno",
                            TxTipoUsuario = "Responsável Aluno"
                        },
                        new
                        {
                            IdTipoUsuario = 6,
                            CdTipoUsuario = "funcionario",
                            TxTipoUsuario = "Funcionario"
                        });
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DtDelecao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdEscola")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("TxEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TxSenha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdEscola");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            DtAtualizacao = new DateTime(2023, 3, 24, 17, 26, 29, 710, DateTimeKind.Local).AddTicks(9102),
                            DtCriacao = new DateTime(2023, 3, 24, 17, 26, 29, 710, DateTimeKind.Local).AddTicks(9094),
                            IdTipoUsuario = 1,
                            TxEmail = "eliasgomesleitejunior99@gmail.com",
                            TxSenha = "f480a2d340bf03ab2fead30a6dbf161024e567fc7202f395072129bf50571af250faf2042a4d172f96936ad68270b0b9cc0b4dcc10f94c36a7454ab1237726a6"
                        });
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.Aluno", b =>
                {
                    b.HasOne("AdministrativoEscolar.CORE.Entities.Escola", "Escola")
                        .WithMany("Alunos")
                        .HasForeignKey("IdEscola")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdministrativoEscolar.CORE.Entities.Matricula", "Matricula")
                        .WithOne("Aluno")
                        .HasForeignKey("AdministrativoEscolar.CORE.Entities.Aluno", "IdMatricula")
                        .IsRequired();

                    b.HasOne("AdministrativoEscolar.CORE.Entities.Usuario", "Usuario")
                        .WithOne("Aluno")
                        .HasForeignKey("AdministrativoEscolar.CORE.Entities.Aluno", "IdUsuario")
                        .IsRequired();

                    b.Navigation("Escola");

                    b.Navigation("Matricula");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.AlunoStatusLetivoHistorico", b =>
                {
                    b.HasOne("AdministrativoEscolar.CORE.Entities.Aluno", "Aluno")
                        .WithMany("StatusLetivoHistorico")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdministrativoEscolar.CORE.Entities.StatusLetivo", "StatusLetivo")
                        .WithMany("Alunos")
                        .HasForeignKey("IdStatusLetivo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("StatusLetivo");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.EnderecoAluno", b =>
                {
                    b.HasOne("AdministrativoEscolar.CORE.Entities.Aluno", "Aluno")
                        .WithMany("Enderecos")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.ResponsavelAluno", b =>
                {
                    b.HasOne("AdministrativoEscolar.CORE.Entities.Aluno", "Aluno")
                        .WithMany("Responsaveis")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdministrativoEscolar.CORE.Entities.Usuario", "Usuario")
                        .WithOne("ResponsavelAluno")
                        .HasForeignKey("AdministrativoEscolar.CORE.Entities.ResponsavelAluno", "IdUsuario");

                    b.Navigation("Aluno");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.StatusMatriculaHistorico", b =>
                {
                    b.HasOne("AdministrativoEscolar.CORE.Entities.Matricula", "Matricula")
                        .WithMany("Historico")
                        .HasForeignKey("IdMatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AdministrativoEscolar.CORE.Entities.StatusMatricula", "StatusMatricula")
                        .WithMany("HistoricoMatricula")
                        .HasForeignKey("IdStatusMatricula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Matricula");

                    b.Navigation("StatusMatricula");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.Usuario", b =>
                {
                    b.HasOne("AdministrativoEscolar.CORE.Entities.Escola", "Escola")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEscola");

                    b.HasOne("AdministrativoEscolar.CORE.Entities.TipoUsuario", "TipoUsuario")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");

                    b.Navigation("TipoUsuario");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.Aluno", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Responsaveis");

                    b.Navigation("StatusLetivoHistorico");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.Escola", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.Matricula", b =>
                {
                    b.Navigation("Aluno");

                    b.Navigation("Historico");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.StatusLetivo", b =>
                {
                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.StatusMatricula", b =>
                {
                    b.Navigation("HistoricoMatricula");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.TipoUsuario", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("AdministrativoEscolar.CORE.Entities.Usuario", b =>
                {
                    b.Navigation("Aluno");

                    b.Navigation("ResponsavelAluno");
                });
#pragma warning restore 612, 618
        }
    }
}
